{"ast":null,"code":"var _jsxFileName = \"/Users/giusepp.demarino/Desktop/ctv-react-app/src/components/ChannelsInfo.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nvar ChannelsInfo = function ChannelsInfo(_ref) {\n  var categories = _ref.categories,\n      channels = _ref.channels;\n  return React.createElement(\"section\", {\n    className: \"channel-selection\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, channels === '' && React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Please select a channel.\"), channels && categories.map(function (programme, i) {\n    var programmeEmbedded = programme._embedded.latestProduction;\n    var episodes = programmeEmbedded.episode ? programmeEmbedded.episode : 'N/A';\n    return React.createElement(\"div\", {\n      key: programme.id,\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"col-md-4\",\n      src: programmeEmbedded._links.image.href,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-8 channel-selection__info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"channel-selection__info-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, programme.title), React.createElement(\"p\", {\n      className: \"channel-selection__info-synopses\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, programme.synopses.ninety), React.createElement(\"p\", {\n      className: \"channel-selection__info-duration\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Duration:\"), ' ', React.createElement(\"span\", {\n      className: \"channel-selection__info-brodcast-duration\",\n      key: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, programmeEmbedded.duration.display)), React.createElement(\"p\", {\n      className: \"channel-selection__info-category\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Category:\"), ' ', programmeEmbedded._embedded.categories.map(function (category, i) {\n      return React.createElement(\"span\", {\n        className: \"channel-selection__info-category-name\",\n        key: category.name + i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, category.name, ' - ');\n    })), React.createElement(\"p\", {\n      className: \"channel-selection__info-brodcast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Broadcast day:\"), ' ', React.createElement(\"span\", {\n      className: \"channel-selection__info-brodcast-day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, moment(programmeEmbedded.broadcastDateTime.commissioning).format('DD/M/YYYY'))), React.createElement(\"p\", {\n      className: \"channel-selection__info-brodcast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Broadcast time:\"), ' ', React.createElement(\"span\", {\n      className: \"channel-selection__info-brodcast-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, moment(programmeEmbedded.broadcastDateTime.commissioning).format('LT'))), React.createElement(\"p\", {\n      className: \"channel-selection__info-episodes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Episode number:\"), ' ', React.createElement(\"span\", {\n      className: \"channel-selection__info-episodes-number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, episodes)), React.createElement(\"p\", {\n      className: \"channel-selection__info-channel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Channel:\"), ' ', React.createElement(\"span\", {\n      className: \"channel-selection__info-channel-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, programmeEmbedded._embedded.channel.name, \" -\"), React.createElement(\"span\", {\n      className: \"channel-selection__info-channel-strapline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, programmeEmbedded._embedded.channel.strapline))));\n  }));\n};\n\nChannelsInfo.propTypes = {\n  channels: PropTypes.string,\n  categories: PropTypes.array\n};\nexport default ChannelsInfo;","map":{"version":3,"sources":["/Users/giusepp.demarino/Desktop/ctv-react-app/src/components/ChannelsInfo.js"],"names":["React","PropTypes","moment","ChannelsInfo","categories","channels","map","programme","i","programmeEmbedded","_embedded","latestProduction","episodes","episode","id","_links","image","href","title","synopses","ninety","duration","display","category","name","broadcastDateTime","commissioning","format","channel","strapline","propTypes","string","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst ChannelsInfo = ({ categories, channels }) => {\n  return (\n    <section className='channel-selection'>\n      {channels === '' && <h3>Please select a channel.</h3>}\n      {channels &&\n        categories.map((programme, i) => {\n          const programmeEmbedded = programme._embedded.latestProduction;\n          const episodes = programmeEmbedded.episode ? programmeEmbedded.episode : 'N/A';\n\n          return (\n            <div key={programme.id} className='row'>\n              <img className='col-md-4' src={programmeEmbedded._links.image.href} />\n              <div className='col-md-8 channel-selection__info'>\n                <h2 className='channel-selection__info-title'>{programme.title}</h2>\n                <p className='channel-selection__info-synopses'>{programme.synopses.ninety}</p>\n                <p className='channel-selection__info-duration'>\n                  <strong>Duration:</strong>{' '}\n                  <span className='channel-selection__info-brodcast-duration' key>\n                    {programmeEmbedded.duration.display}\n                  </span>\n                </p>\n\n                <p className='channel-selection__info-category'>\n                  <strong>Category:</strong>{' '}\n                  {programmeEmbedded._embedded.categories.map((category, i) => (\n                    <span className='channel-selection__info-category-name' key={category.name + i}>\n                      {category.name}\n                      {' - '}\n                    </span>\n                  ))}\n                </p>\n\n                <p className='channel-selection__info-brodcast'>\n                  <strong>Broadcast day:</strong>{' '}\n                  <span className='channel-selection__info-brodcast-day'>\n                    {moment(programmeEmbedded.broadcastDateTime.commissioning).format('DD/M/YYYY')}\n                  </span>\n                </p>\n\n                <p className='channel-selection__info-brodcast'>\n                  <strong>Broadcast time:</strong>{' '}\n                  <span className='channel-selection__info-brodcast-time'>\n                    {moment(programmeEmbedded.broadcastDateTime.commissioning).format('LT')}\n                  </span>\n                </p>\n\n                <p className='channel-selection__info-episodes'>\n                  <strong>Episode number:</strong>{' '}\n                  <span className='channel-selection__info-episodes-number'>{episodes}</span>\n                </p>\n\n                <p className='channel-selection__info-channel'>\n                  <strong>Channel:</strong>{' '}\n                  <span className='channel-selection__info-channel-name'>\n                    {programmeEmbedded._embedded.channel.name} -\n                  </span>\n                  <span className='channel-selection__info-channel-strapline'>\n                    {programmeEmbedded._embedded.channel.strapline}\n                  </span>\n                </p>\n              </div>\n            </div>\n          );\n        })}\n    </section>\n  );\n};\n\nChannelsInfo.propTypes = {\n  channels: PropTypes.string,\n  categories: PropTypes.array\n};\n\nexport default ChannelsInfo;\n"]},"metadata":{},"sourceType":"module"}