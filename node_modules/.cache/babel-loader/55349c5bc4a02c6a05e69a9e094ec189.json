{"ast":null,"code":"import _classCallCheck from \"/Users/giusepp.demarino/Desktop/ctv-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/giusepp.demarino/Desktop/ctv-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/giusepp.demarino/Desktop/ctv-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/giusepp.demarino/Desktop/ctv-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/giusepp.demarino/Desktop/ctv-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/giusepp.demarino/Desktop/ctv-react-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport ChannelsInfo from '../src/components/ChannelsInfo'; //mport SelectChannel from '.../src/components/SelectChannel';\n\nvar Channels =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Channels, _Component);\n\n  function Channels() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Channels);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Channels)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      categories: [],\n      channels: 'itv',\n      error: false\n    };\n\n    _this.handleChange = function (_ref) {\n      var value = _ref.target.value;\n\n      _this.setState({\n        channels: value\n      }, function () {\n        return _this.fetchProgrammes();\n      });\n    };\n\n    _this.fetchProgrammes = function () {\n      var channels = _this.state.channels;\n      Axios.get(\"http://discovery.hubsvc.itv.com/platform/itvonline/ctv/programmes?channelId=\".concat(channels, \"&broadcaster=itv&features=hls,aes\"), {\n        headers: {\n          Accept: 'application/vnd.itv.hubsvc.programme.v3+hal+json; charset=UTF-8'\n        }\n      }).then(function (res) {\n        return _this.setState({\n          categories: res.data._embedded.programmes\n        });\n      }).catch(function (err) {\n        return _this.setState({\n          error: true\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Channels, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchProgrammes();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          channels = _this$state.channels,\n          categories = _this$state.categories,\n          error = _this$state.error;\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.state.channels.toUpperCase(), \" Channel\"), React.createElement(\"form\", {\n        className: \"col-md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(SelectChannel, {\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }))), React.createElement(ChannelsInfo, {\n        categories: categories,\n        channels: channels,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), error ? React.createElement(\"p\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"There was a problem handling your request.\") : '');\n    }\n  }]);\n\n  return Channels;\n}(Component);\n\nexport default Channels;","map":{"version":3,"sources":["/Users/giusepp.demarino/Desktop/ctv-react-app/src/App.js"],"names":["React","Component","Axios","ChannelsInfo","Channels","state","categories","channels","error","handleChange","value","target","setState","fetchProgrammes","get","headers","Accept","then","res","data","_embedded","programmes","catch","err","toUpperCase"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,gCAAzB,C,CACA;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,KAAK,EAAE;AAHD,K;;UAMRC,Y,GAAe,gBAA2B;AAAA,UAAdC,KAAc,QAAxBC,MAAwB,CAAdD,KAAc;;AACxC,YAAKE,QAAL,CAAc;AAAEL,QAAAA,QAAQ,EAAEG;AAAZ,OAAd,EAAmC;AAAA,eAAM,MAAKG,eAAL,EAAN;AAAA,OAAnC;AACD,K;;UAMDA,e,GAAkB,YAAM;AAAA,UACdN,QADc,GACD,MAAKF,KADJ,CACdE,QADc;AAEtBL,MAAAA,KAAK,CAACY,GAAN,uFACiFP,QADjF,wCAEE;AACEQ,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE;AADD;AADX,OAFF,EAQGC,IARH,CAQQ,UAAAC,GAAG;AAAA,eAAI,MAAKN,QAAL,CAAc;AAAEN,UAAAA,UAAU,EAAEY,GAAG,CAACC,IAAJ,CAASC,SAAT,CAAmBC;AAAjC,SAAd,CAAJ;AAAA,OARX,EASGC,KATH,CASS,UAAAC,GAAG;AAAA,eAAI,MAAKX,QAAL,CAAc;AAAEJ,UAAAA,KAAK,EAAE;AAAT,SAAd,CAAJ;AAAA,OATZ;AAUD,K;;;;;;;wCAhBmB;AAClB,WAAKK,eAAL;AACD;;;6BAgBQ;AAAA,wBACiC,KAAKR,KADtC;AAAA,UACCE,QADD,eACCA,QADD;AAAA,UACWD,UADX,eACWA,UADX;AAAA,UACuBE,KADvB,eACuBA,KADvB;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKH,KAAL,CAAWE,QAAX,CAAoBiB,WAApB,EAAL,aADF,EAEE;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,QAAQ,EAAE,KAAKf,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF,EAOE,oBAAC,YAAD;AAAc,QAAA,UAAU,EAAEH,UAA1B;AAAsC,QAAA,QAAQ,EAAEC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EASGC,KAAK,GAAG;AAAG,QAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAAH,GAAyE,EATjF,CADF;AAaD;;;;EA5CoBP,S;;AA+CvB,eAAeG,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Axios from 'axios';\n\nimport ChannelsInfo from '../src/components/ChannelsInfo';\n//mport SelectChannel from '.../src/components/SelectChannel';\n\nclass Channels extends Component {\n  state = {\n    categories: [],\n    channels: 'itv',\n    error: false\n  };\n\n  handleChange = ({ target: { value } }) => {\n    this.setState({ channels: value }, () => this.fetchProgrammes());\n  };\n\n  componentDidMount() {\n    this.fetchProgrammes();\n  }\n\n  fetchProgrammes = () => {\n    const { channels } = this.state;\n    Axios.get(\n      `http://discovery.hubsvc.itv.com/platform/itvonline/ctv/programmes?channelId=${channels}&broadcaster=itv&features=hls,aes`,\n      {\n        headers: {\n          Accept: 'application/vnd.itv.hubsvc.programme.v3+hal+json; charset=UTF-8'\n        }\n      }\n    )\n      .then(res => this.setState({ categories: res.data._embedded.programmes }))\n      .catch(err => this.setState({ error: true }));\n  };\n\n  render() {\n    const { channels, categories, error } = this.state;\n    return (\n      <main>\n        <header className='row'>\n          <h1>{this.state.channels.toUpperCase()} Channel</h1>\n          <form className='col-md-6'>\n            <SelectChannel onChange={this.handleChange} />\n          </form>\n        </header>\n        <ChannelsInfo categories={categories} channels={channels} />\n\n        {error ? <p className='error'>There was a problem handling your request.</p> : ''}\n      </main>\n    );\n  }\n}\n\nexport default Channels;\n"]},"metadata":{},"sourceType":"module"}